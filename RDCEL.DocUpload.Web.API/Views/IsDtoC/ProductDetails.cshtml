@model RDCEL.DocUpload.DataContract.SponsorModel.MyGateViewModel

@{
    ViewBag.Title = "ProductDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<script async src="https://www.googletagmanager.com/gtag/js?id=G-L8SDT9VTMV"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-L8SDT9VTMV');
</script>
<link href="~/Content/jquery-ui-1.13.1.custom/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/jquery-ui-1.13.1.custom/jquery-ui.js"></script>


@using (Html.BeginForm("ProductDetails", "IsDtoC", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off", @id = "product-form" }))
{
    @Html.HiddenFor(m => m.BUId, new { id = "hdnBUId" })
    @Html.HiddenFor(m => m.FormatName, new { id = "hdnFormatName" })
    @Html.HiddenFor(m => m.ExchangePriceString, new { id = "hdnExchangePriceString" })
    @Html.HiddenFor(m => m.BULogoName, new { id = "hdnBuLogoName" })
    @Html.HiddenFor(m => m.ProductAge, new { id = "hdnAge" })
    @Html.HiddenFor(m => m.BusinessUnitId, new { id = "hdnBusinessUnitId" })
    @Html.HiddenFor(m => m.IsSweetnerModelBased, new { id = "hdnIsSweetnerModelBased" })
    @Html.HiddenFor(m => m.PriceCode, new { id = "hdnpricecode" })
    @Html.HiddenFor(m => m.IsQualityConditionWorkingNOnWorking, new { id = "hdnIsQualityWorkingNonWorking" })
    @Html.HiddenFor(m => m.priceMasterNameID, new { id = "hdnpriceMasterNameID" })
    @Html.HiddenFor(m => m.BusinessPartnerId, new { id = "hdnBusinessPartnerId" })
    @Html.HiddenFor(m => m.BasePrice, new { id = "hdnBasePrice" })
    @Html.HiddenFor(m => m.SweetenerBu, new { id = "hdnSweetenerBu" })
    @Html.HiddenFor(m => m.SweetenerBP, new { id = "hdnSweetenerBP" })
    @Html.HiddenFor(m => m.SweetenerDigi2L, new { id = "hdnSweetenerDigi2L" })
    @Html.HiddenFor(m => m.SweetenerTotal, new { id = "hdnSweetenerTotal" })

 
    <div class="row justify-content-center align-items-center">
        <div class="col-md-6 mx-auto">
            <div class="row">
                <div class="col-md-12">
                    <div class="card box">
                        <div class="row">
                            <h3 class="section-title">Enter Your Old Product Details</h3>

                            <div class="col-12">
                                <div class="inputbox">
                                    <label for="">Select Your Appliance <span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(model => model.ProductCategoryId, ViewBag.ProductCategoryList as SelectList, "--Select Product Group--", new { @class = "form-control form-select", @onchange = "GetProType(this.value);", @id = "ddlProdGroup" })
                                    @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="inputbox">
                                    <label for="">Appliance Type <span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(model => model.ProductTypeId, Model.ProductTypeList, new { @class = "form-control form-select", @id = "ddlProdType" })
                                    @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="inputbox">
                                    <label for="">Brand</label>
                                    @Html.DropDownListFor(model => model.BrandId, Model.BrandList, "--Select Brand--", new { @class = "form-control form-select", @id = "ddlBrand" })
                                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="row p-0 my-4">
                                    <div class="inputbox m-0">
                                        <label class="m-0" for="">Quality Status<span style="color:red;">*</span></label>
                                    </div>

                                    @for (int i = 0; i < Model.QualityCheckList.Count; i++)
                                    {
                                        <div class="col-md-6">
                                            <div class="inputbox conditionbox">
                                                <label>
                                                    <i class="fas fa-check-circle"></i>
                                                    <input type="radio" class="form-check-input radioButtonBox" id="tbnRadio" name="QualityCheck" value="@Model.QualityCheckList[i].Value" />
                                                    @Model.QualityCheckList[i].Text

                                                    @*@Html.RadioButtonFor(m => m.QualityCheck, Model.QualityCheckList[i].Value, new { @class = "form-control rdoQualityIndex" })*@
                                                </label>
                                            </div>
                                            <label style="color:green" class="conditionDescription" id="lblQualityIndex_@i">
                                            </label>
                                        </div>
                                    }
                                    </div>

                                </div>

                                <div class="col-12" id="divProductPrice"style="display:none">
                                    <div class="inputbox pricebox">
                                        <h3 class="mainprice">Product Price: <span>₹ <lable id="productPrice"></lable> </span></h3>
                                        <p class="text-muted m-0">Subject to quality check of the product. * T&C Applied</p>
                                    </div>
                                </div>


                                <div class="row">

                                    <div class="col-12 mx-auto inputbox" id="ShowUninstallation">
                                        <div class="mb-3">
                                            <p class="text-muted f-12">
                                                1. Product should be available with all the components.
                                                <br>
                                                2. In case of cancellation, the exchange amount is not payable.
                                                <br>
                                                3. Please ensure the product is kept uninstalled and ready for pickup.
                                            </p>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-group text-center" id="divValidate">
                                            <input type="button" value="Accept Price" class="btn btn-primary" id="btnValidate">
                                            <a href="@Model.url" class="btn btn-secondary" id="btnCancel">Cancel </a>

                                        </div>
                                    </div>
                                </div>

                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("#ShowUninstallation").hide();
    });

    $('#btnValidate').click(function () {
        validateLeadForm();
    })
    function validateLeadForm() {
        if ($("form").valid()) {
            var exchangePrice = $("#hdnExchangePriceString").val();
            if (exchangePrice == null || exchangePrice == "") {
                alert("Unable to process request for this order price not available");
                return false;
            }
            else {
                $("#product-form").submit();
            }

        }
        else {
            return false;
        }
    }

    function GetProType(_productCatId) {
        var proCatId = _productCatId;
        var priceMasterNameID = $("#hdnpriceMasterNameID").val(); 
        var pricecode = $("#hdnpricecode").val();
        if (proCatId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProdTypeByPriceMasterNameIdAndCatid", "Exchange")",
                data: { proCatId: proCatId, priceMasterNameID: priceMasterNameID },
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlProdType").empty();
                        $("#ddlProdType").append('<option value="">--Select Product Type--</option>');
                        $.each(data, function (key, value) {
                            //console.log(value.Value);
                           // alert("get data");
                            $("#ddlProdType").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                        if (proCatId  > 0) {
                            GetBrandByProductGroup(proCatId);
                            GetProdqualityIndexDetailbyCategotyId(proCatId);
                        }

                    } else {
                        $("#ddlProdType").empty();
                    }
                }
            });
            } else {
                 $("#ddlProdType").empty();
            }
    }

    function GetBrandByProductGroup(_productTypeId) {
        var productCatId = parseInt($("#ddlProdGroup").val());
        var typeId = _productTypeId;
        var buid = parseInt($("#hdnBusinessUnitId").val());
        var priceMasterNameId = $("#hdnpriceMasterNameID").val(); 
        if (productCatId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetBrandForOldByPriceMasterNameId", "Exchange")",
                data: { productCatId: productCatId, buid: buid, typeId: typeId, priceMasterNameId: priceMasterNameId },
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlBrand").empty();
                        $("#ddlBrand").append('<option value="">--Select Brand--</option>');
                        $.each(data, function (key, value) {
                            //console.log(value.Value);
                           // alert("get data");
                            $("#ddlBrand").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    } else {
                        $("#ddlBrand").empty();
                    }
                }
            });
            } else {
              $("#ddlBrand").empty();
            }
    }
    function GetProdqualityIndexDetailbyCategotyId(_productCatId) {
        var QualityCheckCondition = $("#hdnIsQualityWorkingNonWorking").val();
        var productCatId = parseInt(_productCatId);
        if (productCatId > 0 && (QualityCheckCondition == "false" || QualityCheckCondition == "False" || QualityCheckCondition == false)) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProdqualityIndexDetailbyCategotyId", "Exchange")",
                data: { productCatId: productCatId },
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#lblQualityIndex_3").text(data.ExcellentDesc);
                        $("#lblQualityIndex_2").text(data.GoodDesc);
                        $("#lblQualityIndex_1").text(data.AverageDesc);
                        $("#lblQualityIndex_0").text(data.NonWorkingDesc);

                        ShowProductPrice();


                    } else {
                        //$("#ddlProdType").empty();
                    }
                }
            });
        }
        else {
             $.ajax({
                 type: "GET",
                 url: "@Url.Action("GetProdqualityIndexDetailbyCategotyId", "Exchange")",
                 data: { productCatId: productCatId },
                 success: function (data) {
                     if (data) {
                        // console.log(data);
                         $("#lblQualityIndex_1").text(data.ExcellentDesc);
                         $("#lblQualityIndex_0").text(data.NonWorkingDesc);
                         ShowProductPrice();

                     } else {
                         //$("#ddlProdType").empty();
                     }
                 }
             });
        }
    }

    $("#ddlProdType").change(function () {
        var typeId = $("#ddlProdType").val();
        GetBrandByProductGroup(typeId);
        $("#ShowUninstallation").show();
        ShowProductPrice();
    });

    $("#ddlBrand").change(function () {
        $("#ShowUninstallation").show();
        ShowProductPrice();
    });

    $('.conditionbox').click(function () {
       
       // console.log('Testing');
        var radio = $(this).find('input[name="QualityCheck"]');
        if (radio.length > 0) {
            radio.prop('checked', true);
            $(this).addClass('active');
            ShowProductPrice();
        }
        $('.conditionbox').not(this).removeClass('active');
    });

    $('input[type=radio][name=QualityCheck]').change(function () {
        ShowProductPrice();
    });

    function ShowProductPrice() {
        var productCatId = $("#ddlProdGroup").val();
        var productSubCatId = $("#ddlProdType").val();
        var brandId = $("#ddlBrand").val();
        var buiId = parseInt($("#hdnBusinessUnitId").val());
        var formatType = $("#hdnFormatName").val();
        var IsOrc = false;
        var conditionId = $('input[name="QualityCheck"]:checked').val();
        var IsSweetnerModelBased = $("#hdnIsSweetnerModelBased").val();
        var bpid = $("#hdnBusinessPartnerId").val();
        var priceNameId = $("#hdnpriceMasterNameID").val();
        var IsValidationBasedSweetner = false;
        var newBrandId = 0;
        //var priceNameId = $("#hnd").val();
        //var priceNameId = $("#hnd").val();

        $("#divProductPrice").hide();
        $("#productPrice").text("");
      /* $("#hdnExchangePriceString").val('');*/
        // alert("hi");
        if (productCatId > 0 && productSubCatId > 0 && conditionId > 0 && brandId > 0 && buiId > 0) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPriceOnBasisofNewPriceMaster", "Exchange")",
                data: { productCatId: productCatId, productSubCatId: productSubCatId, brandId: brandId, conditionId: conditionId, buid: buiId, IsOrc: IsOrc, IsSweetnerModelBased: IsSweetnerModelBased, formatType: formatType, IsValidationBasedSweetner: IsValidationBasedSweetner, newBrandId: newBrandId, priceNameId: priceNameId, bpid: bpid },
                success: function (data) {
                    if (data) {
                            $("#divProductPrice").show();
                        $("#hdnExchangePriceString").val(data.ExchangePrice);
                        $("#productPrice").text(data.ExchangePrice);
                        $("#productPrice").val(data.ExchangePrice);
                        $("#hdnBasePrice").val(data.BaseValue);
                        $("#sweetnerPrice").text(data.SweetenerTotal);
                        $("#hdnSweetenerBu").val(data.SweetenerBu);
                        $("#hdnSweetenerBP").val(data.SweetenerBP);
                        $("#hdnSweetenerDigi2L").val(data.SweetenerDigi2L);
                        $("#hdnSweetenerTotal").val(data.SweetenerTotal);

                        $('html, body').animate({
                            scrollTop: $("#divProductPrice").offset().top
                        }, 2000);

                        } else {
                            $("#divProductPrice").hide();
                            $("#productPrice").text("");
                            $("#productPrice").val('');
                        }
                    }
                });
            }
            else {

        }
    }

</script>