@model RDCEL.DocUpload.DataContract.SponsorModel.ExchagneViewModel

@{
    ViewBag.Title = "Select Location";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link href="~/Content/jquery-ui-1.13.1.custom/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/jquery-ui-1.13.1.custom/jquery-ui.js"></script>

@using (Html.BeginForm("SelectLocation", "Exchange", FormMethod.Post, new { @class = "form-horizontal", @id = "Course-form" }))
{
    @Html.HiddenFor(m => m.BUId, new { id = "hdnBUId" })
    @Html.HiddenFor(m => m.IsSweetnerModelBased, new { id = "hdnSweetnerModalbased" })
    @Html.HiddenFor(m => m.OldBrandId, new { id = "hdnoldbrand" })
    @Html.HiddenFor(m => m.oldProductypeId, new { id = "hdnOldTypeId" })
    @Html.HiddenFor(m => m.OldProductCategoryId, new { id = "hdnOldCategoryId" })
    @Html.HiddenFor(m => m.NewTypeId, new { id = "hdnNewType" })
    @Html.HiddenFor(m => m.NewCategoryId, new { id = "hdnNewCAtegory" })
    @Html.HiddenFor(m => m.NewBrandId, new { id = "hdnnewBrand" })
    @Html.HiddenFor(m => m.ExchangePrice, new { id = "hdnExchangePrice" })
    @Html.HiddenFor(m => m.QualityCheckValue, new { id = "hdnQualityChnage" })
    @Html.HiddenFor(m => m.ProductAge, new { id = "hdnProductAge" })
    @Html.HiddenFor(m => m.FormatName, new { id = "hdnFormatName" })
    @Html.HiddenFor(m => m.ProductModelIdNew, new { id = "hdnNewProductModelId" })
    <div class="col-6 m-auto" style="margin: 5px;">
        <div class="logowrapper py-3">
            @if (Model.BULogoName != null)
            {
                <img class="logo"
                     src="@Model.BULogoName">
            }
            else
            {
                <img class="logo"
                     src="https://i.pinimg.com/originals/3f/95/48/3f9548beef7804b53a111ced870da0c6.png">
            }
        </div>
    </div>

    <h3 class="section-title">Select Dealer Place</h3>
    <div class="form-group">
        <label for="">State <span style="color:red;">*</span></label>
        @Html.DropDownListFor(model => model.StateName, ViewBag.StateList as SelectList, "--Select State--", new { @class = "custom-select", @onchange = "GetCity(this.value);", @id = "ddlState" })
        @Html.ValidationMessageFor(model => model.StateName)
    </div>

    <div class="form-group">
        <label for="">City <span style="color:red;">*</span></label>
        @Html.DropDownListFor(model => model.CityName, Model.CityList, new { @class = "custom-select", @id = "ddlCity" })
        @Html.ValidationMessageFor(model => model.CityName)
    </div>


    //if (Model.BUId == 1 || Model.BUId == 8 || Model.BUId == 12 || Model.BUId == 13 || Model.BUId == 10)
    //{
    <div class="form-group">
        <label for="">Pincode <span style="color:red;">*</span></label>
        @Html.TextBoxFor(model => model.ZipCode, new { @class = "custom-select", @id = "txtPincode", @type = "number", @onchange = "GetStoreList(this.value);" })
        @Html.ValidationMessageFor(model => model.ZipCode)
    </div>

    <div class="form-group">

        <label for="">Authorized Dealer Store<span style="color:red;">*</span></label>
        @Html.DropDownListFor(model => model.BusinessPartnerId, Model.StoreList, "--Select Store Name--", new { @class = "form-control", @id = "ddlStore" })
        @Html.ValidationMessageFor(model => model.BusinessPartnerId, "", new { @class = "text-danger" })
        <label id="lblStoreCode" style="color:red;"></label>

    </div>
    if (Model.showEmployeeId == true)
    {
        <div class="form-group">
            <label for="">Employee Id<span style="color:red;">*</span></label>
            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", @id = "EmployeeId", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            <label id="lblStoreCode" style="color:red;"></label>
        </div>
    }
    else
    {
        @Html.HiddenFor(m => m.EmployeeId, new { id = "hdnEmployeeId" })
    }

    @*<div class="form-group">
            <label for="">Place of Order<span style="color:red;">*</span></label>
            @Html.DropDownListFor(model => model.FormatName, ViewBag.FormateList as List<SelectListItem>, "--Select Format--", new { @class = "custom-select", @id = "ddlFormat" })
            @Html.ValidationMessageFor(model => model.FormatName)
        </div>*@
    @*}
        else if (Model.BUId == 5)
        {
            <div class="form-group">
                <label for="">Store <span style="color:red;">*</span></label>
                @Html.DropDownListFor(model => model.FormatName, ViewBag.FormateList as List<SelectListItem>, "--Select Format--", new { @class = "custom-select", @id = "ddlFormat" })
                @Html.ValidationMessageFor(model => model.FormatName)
            </div>
        }*@
    <div class="form-group text-right">
        <input type="button" id="btnSubmit" value="Submit" class="btn btn-secondary">
    </div>
}

<script>
    $(document).ready(function () {
        $('#txtPincode').attr('autocomplete', 'one-time-code');
    });
    //get city by state

    $('#btnSubmit').click(function () {
        if (validateLeadForm()) {
            $("#Course-form").submit();
        }
    })

    function validateLeadForm() {

        if ($("form").valid()) {

            var bpid = parseInt($("#ddlStore").val());
            if (bpid > 0) {
                return true;
            }
            else {
                $("#lblStoreCode").text("please select store");
                return false;
            }
        }
        else {

            return false;
        }
    }

    function GetCity(_stateName) {
        var stateName = _stateName;
        var buid = $("#hdnBUId").val();
        if (stateName) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCityByStateName", "Exchange")" + "?stateName=" + stateName + "&buid=" + buid,
                //data: { stateName: stateName, buid: buid},
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlCity").empty();
                        $("#ddlCity").append('<option value="">--Select City--</option>');
                        $.each(data, function (key, value) {
                            //console.log(value.Value);
                            // alert("get data");
                            $("#ddlCity").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    } else {
                        $("#ddlCity").empty();
                    }
                    //GetPincode(_stateName);
                }
            });
        } else {
            $("#ddlCity").empty();
        }
    }


      $("#txtPincode").autocomplete({
        source: function (request, response)
        {
            //var customer = new array();
            $.ajax({
                async: false,
                cache: false,
                type: "POST",
                url:
                    "@(Url.Action("GetPincodeByStateName", "Exchange"))" + "?stateName=" + $("#ddlState").val() + "&cityName=" + $("#ddlCity").val() + "&pintext=" + $("#txtPincode").val() + "&buid=" + $("#hdnBUId").val(),
                data: {"pintext": request.pintext},
                success: function (data) {
                    if (data.length > 0) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Text };
                        }))

                    }
                    else {
                        $("#txtPincode").val("");
                    }
                }
            });

            //response(data);
        },
    });
    //get pincode by State
   function GetPincode(_stateName) {
        var stateName = _stateName;
        var buid = $("#hdnBUId").val();
        if (stateName) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPincodeByStateName", "Exchange")" + "?stateName=" + stateName + "&buid=" + buid,
                //data: { stateName: stateName, buid: buid},
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlPincode").empty();
                        $("#ddlPincode").append('<option value="">--Select Ci--</option>');
                        $.each(data, function (key, value) {
                            //console.log(value.Value);
                            // alert("get data");
                            $("#ddlPincode").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    } else {
                        $("#ddlPincode").empty();
                    }
                }
            });
        } else {
            $("#ddlPincode").empty();
        }
    }

    function GetPlaceOfOrder(_pincode) {
        if (_pincode) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetORCStoreByCityStatePin", "Exchange")" + "?stateName=" + $("#ddlState").val() + "&cityName=" + $("#ddlCity").val() + "&pintext=" + _pincode + "&buid=" + $("#hdnBUId").val(),
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlFormat").empty();
                        $("#ddlFormat").append('<option value="">--Select Place of Order--</option>');
                        $.each(data, function (key, value) {
                            $("#ddlFormat").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    } else {
                        //$("#ddlFormat").empty();
                    }
                }
            });
        } else {
            //$("#ddlFormat").empty();
        }
    }

    //Code to get Store details
     function GetStoreList(pincode) {
         var pincode = pincode;
         var buid = parseInt($("#hdnBUId").val());
         var city = $("#ddlCity").val();
         if (buid > 0 && pincode != null && city != null) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetStoreList", "Exchange")",
                data: { city: city, pincode: pincode,buid: buid},
                success: function (data) {
                    if (data) {
                        //console.log(data);
                        $("#ddlStore").empty();
                        $("#ddlStore").append('<option value="">--Select store--</option>');
                        $.each(data, function (key, value) {
                            //console.log(value.Value);
                            // alert("get data");
                            $("#ddlStore").append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    } else {
                        $("#ddlStore").empty();
                    }
                }
            });
        } else {
             $("#ddlStore").empty();
        }
    }
</script>